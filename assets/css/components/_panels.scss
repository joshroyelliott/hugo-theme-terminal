.panel {
    background: var(--base00);
    border: 2px solid var(--base05);
    border-radius: 6px;
    position: relative;
    transition: border-color 0.2s ease;
    margin: 0;
    // height: 100%; /* Fix the height to exactly match the grid cell */
    min-height: 0;
    display: flex;
    flex-direction: column;
    overflow: visible; /* Allow protruding elements to be visible */
    max-height: calc(100vh - 9rem);
    
    &__content {
        padding: 1rem;
        font-size: 1rem;
        position: relative; // For scroll indicator positioning
        flex: 1; /* Allow content to fill panel */
        overflow-y: auto; /* Enable scrolling when content overflows */
        scrollbar-width: none; /* Hide default scrollbar in Firefox */
        -ms-overflow-style: none; /* Hide default scrollbar in IE/Edge */
        
        &::-webkit-scrollbar {
            display: none; /* Hide default scrollbar in Chrome/Safari */
        }

        h1, h2, h3, h4, h5, h6 {
          margin-top: 1rem;
          margin-bottom: 0.5rem;
        }
        
        p {
          margin: 0;
        }

        a {
            color: var(--base0B);
            text-decoration: none;
            transition: color 0.2s ease;
            
            &:hover {
                color: var(--base0C);
            }
        }

        blockquote {
          margin: 0.5rem 0;
        }
    }
    
    // Header wrapper to contain number, separator, and title
    &__header {
        position: absolute;
        display: flex;
        align-items: center;
        background: var(--base00);
        height: 2px;
        top: -2px;
        left: 1rem;
        padding: 0;
        white-space: nowrap;
        z-index: 1;
        gap: 0;
        
        // Ensure every element in the header has the same background
        > * {
            background: var(--base00);
        }
    }
    
    &__number {
        color: var(--base05);
        font-size: 1rem;
        font-weight: 400;
        transition: all 0.2s ease;
        background: var(--base00);
        padding: 0 1px;
        line-height: 1;
        position: relative;
        top: 1px;
    }
    
    // The separator between number and title
    &__separator {
        width: 1rem;
        height: 2px;
        background-color: var(--base05);
        position: relative;
        transition: background-color 0.2s ease;
    }
    
    &__title {
        color: var(--base0B);
        font-size: 1rem;
        font-weight: 400;
        transition: all 0.2s ease;
        background: var(--base00);
        padding: 0 1px;
        line-height: 1;
        position: relative;
        top: 1px;
    }
    
    &__note {
        position: absolute;
        background: var(--base00);
        color: var(--base05);
        font-size: 1rem;
        font-weight: 400;
        padding: 0 1px;
        height: 2px;
        line-height: 1;
        display: flex;
        align-items: center;
        top: -2px;
        right: 1rem;
        transition: all 0.2s ease;
        white-space: nowrap;
        z-index: 1;
    }
    
    // Hover states
    &:hover {
        border-color: var(--base0B);
        
        .panel__number {
            color: var(--base0B);
            font-weight: 700;
        }
        
        .panel__separator {
            background-color: var(--base0B);
        }
        
        .panel__title {
            color: var(--base0B);
            font-weight: 700;
        }
        
        .panel__main-separator {
            background-color: var(--base0B);
        }
    }

    // List panel modification
    &--list {
        position: relative;
        
        // Counter element
        &[data-count]::after {
            content: attr(data-count);
            position: absolute;
            bottom: -2px;
            right: 1rem;
            background: var(--base00);
            padding: 0 4px;
            font-size: 0.9rem;
            color: var(--base05);
            height: 2px;
            display: flex;
            align-items: center;
        }

        // List styles
        .panel__list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .panel__list-item {
            padding: 0;
            margin: 0;
            border-bottom: 1px solid var(--base02);
            
            &:last-child {
                border-bottom: none;
            }
        }
        
        .panel__list-link {
            display: block;
            padding: 0.5rem 0rem;
            color: var(--base05);
            text-decoration: none;
            position: relative;
            transition: all 0.2s ease;
            
            // Active/hover indicator that attaches to the left border
            &::before {
                content: '';
                position: absolute;
                left: -1rem; // Position it exactly at the edge of the panel border
                top: 0;
                height: 100%;
                width: 3px;
                background-color: transparent;
                transition: background-color 0.2s ease;
            }
            
            &:hover {
                background: var(--base00);
                color: var(--base0B);
                
                &::before {
                    background-color: var(--base0B);
                }
            }
            
            &--active {
                background: var(--base00);
                color: var(--base05);
                
                &::before {
                    background-color: var(--base05);
                }
            }
        }
        
        .panel__list-title {
            font-weight: 400;
            margin: 0;
            padding: 0;
        }
        
        .panel__list-meta {
            font-size: 0.9em;
            color: var(--base03);
            margin-top: 0.25rem;
        }
        
        .panel__list-summary {
            font-size: 0.9em;
            color: var(--base04);
            margin-top: 0.25rem;
        }
    }

    // Tab panel
    &--tab {
        .panel__header {
            // Maintain consistent header style with other panels
            height: 2px;
            overflow: visible;
        }

        // Main panel title if there is one
        .panel__main-title {
            color: var(--base0B);
            font-size: 1rem;
            font-weight: 400;
            transition: all 0.2s ease;
            background: var(--base00);
            padding: 0 1px;
            line-height: 1;
            position: relative;
            top: 1px;
        }

        // Container for tab sections
        .panel__tabs {
            display: inline-flex;
            align-items: center;
            background: var(--base00);
            line-height: 1;
            position: relative;
            top: 1px;
            max-width: calc(100% - 150px); // Allow space for the title
            overflow: visible; // Changed from hidden to visible to prevent cutoff
            padding-right: 0; // Remove any potential padding
            margin-right: 0; // Remove any potential margin
            white-space: nowrap;
        }

        // Individual tab in the header
        .panel__tab {
            color: var(--base05);
            cursor: pointer;
            transition: all 0.2s ease;
            font-weight: 400;
            padding: 0 1px;
            white-space: nowrap; // Keep tab text on single line
            background: var(--base00); // Ensure background matches panel

            &:hover {
                color: var(--base0C);
            }

            &--active {
                color: var(--base0B);
            }
        }

        // Separator between tabs
        .panel__tab-separator {
            margin: 0 0.35rem;
            color: var(--base03);
            background: var(--base00); // Ensure background matches panel
        }

        // Tab content area with heading display
        .panel__tab-content {
            display: none;
            padding: 1rem;
            position: relative;
            
            &--active {
                display: block;
            }
            
            // Style for generated tab headings (the same in all modes)
            .tab-generated-heading {
                font-size: 1.1rem;
                font-weight: 500;
                margin-top: 0;
                margin-bottom: 1rem;
                color: var(--base0B);
            }
        }

        // Wide enough panel (column layout)
        &.panel--wide-enough {
            // Hide tab navigation when in wide mode
            .panel__tabs {
                display: none;
            }

            .panel__tab-contents {
                display: flex;
                gap: 1rem;
            }

            .panel__tab-content {
                display: block !important; // Force display for column mode
                flex: 1;
                
                // Add proper spacing for divider between columns
                &:not(:last-child) {
                    position: relative;
                    padding-right: 1.5rem;
                    
                    // Use a pseudo-element for the divider to control its height
                    &::after {
                        content: '';
                        position: absolute;
                        top: 1rem; // Match the padding of panel__content
                        bottom: 1rem; // Match the padding of panel__content
                        right: 0;
                        width: 1px;
                        background-color: var(--base02);
                    }
                }
                
                // Remove the ::before pseudo-element
                &::before {
                    content: none;
                }
            }
        }

        // Media query to handle responsive display
        @media (max-width: 768px) {
            .panel__tabs {
                // Replace section names with numbers when screen is small
                .panel__tab {
                    font-size: 0; // Hide the text completely
                    padding: 0 1px;
                    display: inline-block;
                    
                    &::before {
                        content: attr(data-tab-num);
                        font-size: 0.9rem;
                        background: var(--base00);
                    }
                }
            }
            
            // Remove the ::before pseudo-element in mobile tab view
            &:not(.panel--wide-enough) .panel__tab-content::before {
                content: none;
            }
        }
    }

    // Preview panel - just a simple border
    &--preview {
        border-color: var(--base04);

        .js-scroll-indicator {
            position: absolute;
            right: -5px;
            width: 3px;
            background-color: var(--base0B);
            transition: top 0.1s ease, height 0.1s ease;
            opacity: 0;
        }
        
        &:hover .js-scroll-indicator {
            opacity: 1;
        }
    }
    
    // Input panel - styles for actual HTML input elements
    &--input {
        position: relative;
        
        // Add the prompt character, making sure it only applies directly to input panels
        &.panel::before {
            content: '>';
            position: absolute;
            top: 1rem;
            left: 1rem;
            color: var(--base05);
            font-weight: 400;
            z-index: 1;
        }
        
        .panel__content {
            padding-left: 2.2rem; // Extra space for the prompt character
            position: relative;
        }
        
        // Style for the actual input element
        input[type="text"], 
        input[type="search"],
        input[type="password"],
        input[type="email"],
        input[type="url"],
        input[type="tel"] {
            background: transparent;
            border: none;
            color: var(--base05);
            font-family: $font-mono;
            font-size: 1rem;
            width: 100%;
            padding: 0;
            margin: 0;
            outline: none;
            
            // Try to make a block cursor in browsers that support it
            // This won't work in all browsers, but standard line cursor is acceptable fallback
            caret-color: var(--base06);
            
            // More specific properties for modern browsers
            @supports (caret-shape: block) {
                caret-shape: block;
                caret-width: 0.6rem;
            }
        }
        
        // Textarea styling for auto-growing
        textarea {
            background: transparent;
            border: none;
            color: var(--base05);
            font-family: $font-mono;
            font-size: 1rem;
            width: 100%;
            padding: 0;
            margin: 0;
            outline: none;
            resize: none; // Disable manual resize as we'll auto-resize
            min-height: 1.5rem;
            line-height: 1.5;
            overflow: hidden; // Hide overflow for auto-growing
            white-space: pre;
            
            // Try to make a block cursor in browsers that support it
            caret-color: var(--base06);
            
            // More specific properties for modern browsers
            @supports (caret-shape: block) {
                caret-shape: block;
                caret-width: 0.6rem;
            }
        }
        
        // Active state (when input is focused)
        &--active {
            border-color: var(--base0C);
            
            .panel__title {
                color: var(--base0C);
                font-weight: 700;
            }
            
            .panel__separator {
                background-color: var(--base0C);
            }
            
            // Ensure the prompt character matches the text color even when active
            &::before {
                color: var(--base05);
            }
        }
        
        // Hover state 
        &:hover {
            border-color: var(--base0B);
        }
        
        // Special handling when input panel is also scrollable
        &.panel.panel--scroll {
            .panel__content {
                max-height: 300px;
                overflow-y: visible; // We want the content itself to scroll
            }
            
            textarea {
                max-height: 278px; // 300px - 2x padding (1rem = 16px)
                overflow-y: auto; // Allow scrolling within the textarea
                resize: vertical; // Allow vertical resize within the max-height
                scrollbar-width: none;
                -ms-overflow-style: none;
                
                &::-webkit-scrollbar {
                    display: none;
                }
            }
            
            // Add scroll indicator for scrollable input panels
            .js-scroll-indicator {
                position: absolute;
                right: -5px;
                width: 3px;
                background-color: var(--base0B);
                transition: top 0.1s ease, height 0.1s ease;
                opacity: 0;
            }
            
            &:hover .js-scroll-indicator {
                opacity: 1;
            }
        }
    }

    // Scroll feature for any panel
    &--scroll {
        .js-scroll-indicator {
            position: absolute;
            right: -5px;
            width: 3px;
            background-color: var(--base0B);
            transition: top 0.1s ease, height 0.1s ease;
            opacity: 0;
            z-index: 5;
        }
        
        &:hover .js-scroll-indicator {
            opacity: 1;
        }
    }
}
